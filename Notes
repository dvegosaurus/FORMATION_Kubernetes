ref : https://github.com/sciabarracom/Mosaico3/tree/master/docs

##### Lexique ##### :
Node        : une machine du cluster (master ou node/worker)
Pod         : contient un ou des conteneurs docker
Déploiement : contient des Pods
Service     : contient des déploiements


##### Notes ##### :
-- Mosaico3 :
    - attention : les versions Docker et Kubernetes ne sont pas figées

-- Kubernetes : 
    - apport du HA a docker
    - capacité de déployer sur plusieurs machines
    - agnostique : ni dédié a ni maintenu par docker 
    - totalement indépendant de docker
        - attention : vérifier compatibilité Docker avec la version Kubernetes utilisé
        - les versions n'évoluent pas ensemble
    - daemon kubelet (géré par systemctl) :
        - gère la communication dans le cluster (1 service par noeud)
        - non dockerisable
    - Modulaire :
        - pour une partie des composants choix entre plusieurs produits 
        - i.e : couche réseau -> weave,calico,flanel
    - Docker installé par Kubernetes (pour le fonctionnement Kubernetes)
        - weave : réseau
        - apiserver : api result
            - kubectl est simplement un client pour apiserver
    - Par défaut un master node n'héberge pas de docker autre que ceux dont il a besoin :
        - pas de docker grafana, wordpress ...
        - juste les docker fonctionnel (réseaux, api Kubernetes)
    - Un POD = 2 conteneur au minimun :
        - l'application (i.e. nginx)
        - un docker "pilote"

-- Pods :
    - contient un ou des conteneurs docker
    - Kubernetes ne gere pas des conteneur mais des Pods
    - 1 PODS a une 1 adresse IP dans un VLAN dédié (interne au cluster)
    - les conteneurs d'un POD sont sur le meme node
    - on peut multiplier un POD pour la scalabilité
        - kubectl scale deploy/<nom du deployment> --replicas=5 
        - les nodes téléchargent leurs images docker indépendemment
            - donc si repo spécifique, a configurer sur chaque node
        - l'equilibrage de charge se fait sans tenir compte de la charge
            - Nbr. de Pod / Nombre de Nod (10 POD / 3 serveurs = 3,3,4)
        - Pas de déplacement des PODS entre Node :
            - ajout d'un node n'entraine pas le réequilbrage
                - reste vide jusqu'a ce que un ou des POD démarre


-- Vagrant :
    - Infra as code pour déploiement de VM

-- Ansible : 
    - Attention package pas toujours a jours sur les repos officiel
    - Ajouter le repos EPEL 
        - Extra Packages for Enterprise Linux
    - sudo yum install 
    - yum install ansible -> ajoute les docs plus un peu de conf
    - pip install ansible -> latest release garanti ou choix d'une ancienne version
        - pip installer python (ansible est codé en Python)

-- redis,zookeeper,etcd :
    - BDD spéciale : uniquement stockage de paire Key/Value
    - rapide a écrire, rapide a lire
    - redis vs zookeeper,etcd -> redis pas vraiment prévu pour de la clusterisation
        - donc etcd pour clusteriser la conf Kubernetes (c.f. Haute Dispo)

-- Infra de formation :
source (Vagrantfile) : https://github.com/sciabarracom/Mosaico3/blob/master/servers/vbox/Vagrantfile

    - Hote (Centos 7): accueille les VM
        - heberge 4 VM ubuntu  16.04 (Oracle virtual Box)
            - master,node1,node2,node3
        - 2 cartes réseau par VM
            - 1/ Enpos03 : 192.168.0.15/16 
                - meme IP pour chaque VM, utilisé pour du NAT et sortir sur le web
            - 2/ Enpos08 : 10.0.0.x/24 
                - pluggué sur vswitch en bridge (réseau 'kube')
                
##### Unix command ######### :
-- Vagrant local repo :
    - vagrant box add ubuntu/xenial64 file:///home/ib/Téléchargements/virtualbox.box-aka_ubuntu_xenial64 
-- Run bash script from string :
    - sudo bash -c "echo 127.0.0.1 master node1 node2 node3 >> /etc/hosts"
-- Install EPEL Repos :
    - sudo yum install epel-release
-- pip install old release
    - pip install ansible==<version number>
-- run ansible playbook :
    - ansible-playbook site.yml 
-- ssh example + kubeadm :
    - ssh node1 sudo kubeadm join --discovery-token-unsafe-skip-ca-verification --token=mjlcb2.obg2eiu17ux0e0z5 10.0.0.10:6443
-- surveiller une commande :
    - watch ssh master kubectl get nodes
    - result :

        Every 2,0s: ssh master kubectl get nodes             Wed May 22 11:47:18 2019

        NAME     STATUS   ROLES    AGE     VERSION
        master   Ready    master   44m     v1.14.2
        node1    Ready    <none>   6m40s   v1.14.2
        node2    Ready    <none>   5m30s   v1.14.2
        node3    Ready    <none>   5m6s    v1.14.2

